<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
        <ProjectGuid>{E0E2F92E-557C-4A05-9D89-AA92A0BD75C4}</ProjectGuid>
        <OutputType>Library</OutputType>
        <AppDesignerFolder>Properties</AppDesignerFolder>
        <RootNamespace>ResourceUnloadOptimizer</RootNamespace>
        <AssemblyName>ResourceUnloadOptimizer</AssemblyName>
        <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
        <FileAlignment>512</FileAlignment>
        <LangVersion>10</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <Choose>
        <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Valheim/Contents/MacOS</GamePath>
            </PropertyGroup>
        </When>
        <When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 892970', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
                <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
                <GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Valheim</GamePath>
            </PropertyGroup>
        </When>
    </Choose>
    <ItemGroup>
        <Reference Include="0Harmony">
            <HintPath>$(GamePath)\BepInEx\core\0Harmony.dll</HintPath>
        </Reference>
        <Reference Include="assembly_guiutils">
            <HintPath>$(GamePath)\valheim_Data\Managed\publicized_assemblies\assembly_guiutils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_utils">
            <HintPath>$(GamePath)\valheim_Data\Managed\publicized_assemblies\assembly_utils_publicized.dll</HintPath>
        </Reference>
        <Reference Include="assembly_valheim">
            <HintPath>$(GamePath)\valheim_Data\Managed\publicized_assemblies\assembly_valheim_publicized.dll</HintPath>
        </Reference>
        <Reference Include="BepInEx">
            <HintPath>$(GamePath)\BepInEx\core\BepInEx.dll</HintPath>
        </Reference>
        <Reference Include="MonoMod.RuntimeDetour">
          <HintPath>$(GamePath)\BepInEx\core\MonoMod.RuntimeDetour.dll</HintPath>
        </Reference>
        <Reference Include="System" />
        <Reference Include="System.Core" />
        <Reference Include="System.Data" />
        <Reference Include="System.Xml" />
        <Reference Include="UnityEngine">
            <HintPath>$(GamePath)\valheim_Data\Managed\UnityEngine.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.AssetBundleModule">
            <HintPath>$(GamePath)\valheim_Data\Managed\UnityEngine.AssetBundleModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <HintPath>$(GamePath)\valheim_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule">
            <HintPath>$(GamePath)\valheim_Data\Managed\UnityEngine.IMGUIModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.PhysicsModule">
            <HintPath>$(GamePath)\valheim_Data\Managed\UnityEngine.PhysicsModule.dll</HintPath>
        </Reference>
        <Reference Include="UnityEngine.UI">
            <HintPath>$(GamePath)\valheim_Data\Managed\UnityEngine.UI.dll</HintPath>
        </Reference>
    </ItemGroup>
    <ItemGroup>
        <Compile Include="MemoryInfo.cs" />
        <Compile Include="Plugin.cs" />
        <Compile Include="Properties\AssemblyInfo.cs" />
    </ItemGroup>
    <ItemGroup>
        <Content Include=".gitignore" />
        <Content Include="LICENSE.txt" />
        <Content Include="README.md" />
        <Content Include="Thunderstore\CHANGELOG.md" />
        <Content Include="Thunderstore\icon.png" />
        <Content Include="Thunderstore\manifest.json" />
        <Content Include="Thunderstore\README.md" />
        <Content Include="UpdateManifest.ps1" />
    </ItemGroup>
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
    <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->

    <Target Name="GetAssemblyVersion" AfterTargets="AfterBuild">
        <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
            <Output TaskParameter="Assemblies" ItemName="Targets" />
        </GetAssemblyIdentity>
        <ItemGroup>
            <AssemblyVersions Include="@(Targets->'%(Version)')" />
        </ItemGroup>
        <PropertyGroup>
            <AssemblyVersion>%(AssemblyVersions.Identity)</AssemblyVersion>
            <Major>$(AssemblyVersion.Split('.')[0])</Major>
            <Minor>$(AssemblyVersion.Split('.')[1])</Minor>
            <Patch>$(AssemblyVersion.Split('.')[2])</Patch>
            <PackageName>$(AssemblyName)_v$(Major).$(Minor).$(Patch)</PackageName>
            <PackageVersion>$(Major).$(Minor).$(Patch)</PackageVersion>
            <VersionString>$(Major).$(Minor).$(Patch)</VersionString>
            <PackageDir>Thunderstore\$(PackageName)</PackageDir>
        </PropertyGroup>
    </Target>
    <Target Name="Copy" AfterTargets="GetAssemblyVersion">
        <!--<Exec Command="copy /Y &quot;$(TargetDir)$(AssemblyName).dll&quot; &quot;C:\Users\crypt\AppData\Roaming\r2modmanPlus-local\Valheim\profiles\PTB\BepInEx\plugins\$(AssemblyName).dll&quot;" />-->
        <Exec Command="copy /Y &quot;README.md&quot; &quot;Thunderstore\README.md&quot;" />
    </Target>
    <Target Name="UpdateManifestVersion" AfterTargets="Copy">
        <ItemGroup>
            <ManifestFile Include="$(ProjectDir)Thunderstore\manifest.json" />
        </ItemGroup>

        <Message Text="ManifestFile is @(ManifestFile)" />
        <Error Text="Thunderstore\manifest.json not found" Condition="!Exists(@(ManifestFile))" />
        <Message Text="Updating version number in Thunderstore\manifest.json" Condition="Exists(@(ManifestFile))" />
        <Exec Command="powershell.exe -ExecutionPolicy Bypass -Command &quot;&amp; { &amp; '$(ProjectDir)UpdateManifest.ps1' -manifestFile '@(ManifestFile)' -versionString '$(PackageVersion)' }&quot;" />
    </Target>
    <Target Name="MakeThunderstorePackage" AfterTargets="UpdateManifestVersion" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <ItemGroup>
            <PackageFiles Include="$(TargetDir)$(AssemblyName).dll; Thunderstore\README.md; Thunderstore\CHANGELOG.md; Thunderstore\manifest.json; Thunderstore\icon.png;" />
        </ItemGroup>
        <MakeDir Directories="$(PackageDir)" />
        <Copy SourceFiles="@(PackageFiles)" DestinationFolder="$(PackageDir)" />
        <ZipDirectory SourceDirectory="$(PackageDir)" DestinationFile="Thunderstore\$(PackageName).zip" Overwrite="true" />
        <RemoveDir Directories="$(PackageDir)" />
    </Target>
    <Target Name="MakeNexusPackage" AfterTargets="MakeThunderstorePackage" Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
        <MakeDir Directories="$(ProjectDir)\Nexus" />
        <ItemGroup>
            <NexusPackageFiles Include="$(TargetDir)$(AssemblyName).dll;" />
        </ItemGroup>
        <MakeDir Directories="$(PackageDir)" />
        <Copy SourceFiles="@(NexusPackageFiles)" DestinationFolder="$(PackageDir)" />
        <ZipDirectory SourceDirectory="$(PackageDir)" DestinationFile="Nexus\$(PackageName).zip" Overwrite="true" />
        <RemoveDir Directories="$(PackageDir)" />
    </Target>

</Project>
